/* Maxima computer algebra system */

/* symbolic constants */

[true, false, unknown, inf, minf, ind,
 und, %e, %pi, %phi, %gamma];

/* programming keywords */

if a then b elseif c then d else f;
for x:1 thru 10 step 2 do print(x);
for z:-2 while z < 0 do print(z);
for m:0 unless m > 10 do print(m);
for x in [1, 2, 3] do print(x);
foo and bar or not baz;

/* built-in flags */

[display2d, simp, dispflag, stringdisp, lispdisp];

/* built-in functions */

[sin, cosh, exp, atan2, sqrt, log, struve_h,
 sublist_indices, read_array];

/* user-defined symbols */

[foo, ?bar, baz%, quux_mumble_blurf];

/* different kinds of integers */

[0, 1234, 1234., 0abcdefgh];

/* floats and bigfloats */

[0.0, 123.45, 123e45, 123.45e67, 1234b5, 12.345b67];

/* strings */

s1 : "now is";
s2 : sconcat ("the \"time\" for all ",
              sconcat ("'good' men ",
                       "to
 come to the
 aid of their country"));

/* expressions */

foo (x, y, z) :=
  if x > 1 + y
    then z - x*y
  elseif y <= 100!
    then x/(y + z)^2
  else z - y . x . y;

display2d : false $
foo(%pi, %e, bessel_j(1, u));
is (% > 0);
(sin(1) - 1, 2*%%, 1 - %%);
print ("most recent output is", %);

blurf[foo](a) := a^foo - foo^a $
blurf[2];
is (blurf[2] = lambda([a], a^2 - 2^a));

blurf[%pi](%e) - matrix([%phi])^^2;
