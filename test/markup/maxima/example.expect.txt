<span class="hljs-meta">/* Maxima computer algebra system */</span>

<span class="hljs-meta">/* symbolic constants */</span>

[<span class="hljs-literal">true</span>, <span class="hljs-literal">false</span>, <span class="hljs-literal">unknown</span>, <span class="hljs-literal">inf</span>, <span class="hljs-literal">minf</span>, <span class="hljs-literal">ind</span>,
 <span class="hljs-literal">und</span>, <span class="hljs-literal">%e</span>, <span class="hljs-literal">%i</span>, <span class="hljs-literal">%pi</span>, <span class="hljs-literal">%phi</span>, <span class="hljs-literal">%gamma</span>];

<span class="hljs-meta">/* programming keywords */</span>

<span class="hljs-keyword">if</span> a <span class="hljs-keyword">then</span> b <span class="hljs-keyword">elseif</span> c <span class="hljs-keyword">then</span> d <span class="hljs-keyword">else</span> f;
<span class="hljs-keyword">for</span> x:<span class="hljs-number">1</span> <span class="hljs-keyword">thru</span> <span class="hljs-number">10</span> <span class="hljs-keyword">step</span> <span class="hljs-number">2</span> <span class="hljs-keyword">do</span> <span class="hljs-built_in">print</span>(x);
<span class="hljs-keyword">for</span> z:-<span class="hljs-number">2</span> <span class="hljs-keyword">while</span> z &lt; <span class="hljs-number">0</span> <span class="hljs-keyword">do</span> <span class="hljs-built_in">print</span>(z);
<span class="hljs-keyword">for</span> m:<span class="hljs-number">0</span> <span class="hljs-keyword">unless</span> m &gt; <span class="hljs-number">10</span> <span class="hljs-keyword">do</span> <span class="hljs-built_in">print</span>(m);
<span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>] <span class="hljs-keyword">do</span> <span class="hljs-built_in">print</span>(x);
foo <span class="hljs-keyword">and</span> bar <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> baz;

<span class="hljs-meta">/* built-in variables */</span>

[<span class="hljs-symbol">_</span>, <span class="hljs-symbol">__</span>, <span class="hljs-symbol">%</span>, <span class="hljs-symbol">%%</span>, <span class="hljs-symbol">linel</span>, <span class="hljs-symbol">simp</span>, <span class="hljs-symbol">dispflag</span>,
 <span class="hljs-symbol">stringdisp</span>, <span class="hljs-symbol">lispdisp</span>, <span class="hljs-symbol">%edispflag</span>];

<span class="hljs-meta">/* built-in functions */</span>

[<span class="hljs-built_in">sin</span>, <span class="hljs-built_in">cosh</span>, <span class="hljs-built_in">exp</span>, <span class="hljs-built_in">atan2</span>, <span class="hljs-built_in">sqrt</span>, <span class="hljs-built_in">log</span>, <span class="hljs-built_in">struve_h</span>,
 <span class="hljs-built_in">sublist_indices</span>, <span class="hljs-built_in">read_array</span>];
